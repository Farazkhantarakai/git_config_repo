spring.application.name=API-GATEWAY

server.port=8080
spring.profiles.active=dev

logging.level.root=info


spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/findbud
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql= true
# spring.datasource.hikari.shutdown-timeout=30


# now for routing this will be handle like this
spring.cloud.gateway.routes[0].id=applicationname
# here the load balancer will look in eureka for the name of the application not by ip
# then if the application have many instances it will divide the load on all the instances
# when a user make request to that particular url then load balanacer will divide it in different application
# it is based on round robin
#lb:// enables dynamic routing and load balancing using Eureka.
# It helps distribute traffic between multiple instances of a microservice.
# It removes the need for manual configuration of service URLs.
spring.cloud.gateway.routes[0].uri=lb://application-name
spring.cloud.gateway.routes[0].predicates[0]=Path=/rooms/**


# if you donot use lb:// then you will have to use fix uri but then if another instance is added it would not
# be used unless you manually change the configuration
#With lb://, the gateway will always route to the available instances dynamically.
#spring.cloud.gateway.routes[0].uri=http://localhost:8081



eureka.client.service-url.default-zone=http://localhost:8761/eureka/
eureka.client.registerWithEureka=true
eureka.client.instance.hostname=localhost

# these are for spring doc
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs